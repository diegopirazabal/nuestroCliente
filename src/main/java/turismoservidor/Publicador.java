package turismoservidor;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.FaultAction;

/**
 * This class was generated by Apache CXF 4.0.5
 * 2024-11-20T13:40:54.595-03:00
 * Generated source version: 4.0.5
 *
 */
@WebService(targetNamespace = "http://publicador/", name = "Publicador")
@XmlSeeAlso({ObjectFactory.class})
@SOAPBinding(style = SOAPBinding.Style.RPC)
public interface Publicador {

    @WebMethod
    @Action(input = "http://publicador/Publicador/obtenerActividadesConfirmadasPorEntrenadorRequest", output = "http://publicador/Publicador/obtenerActividadesConfirmadasPorEntrenadorResponse")
    @WebResult(name = "return", targetNamespace = "http://publicador/", partName = "return")
    public DataListaActividades obtenerActividadesConfirmadasPorEntrenador(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    );

    @WebMethod
    @Action(input = "http://publicador/Publicador/crearClaseRequest", output = "http://publicador/Publicador/crearClaseResponse", fault = {@FaultAction(className = ClaseRepetidaException_Exception.class, value = "http://publicador/Publicador/crearClase/Fault/ClaseRepetidaException")})
    public void crearClase(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0,
        @WebParam(partName = "arg1", name = "arg1")
        javax.xml.datatype.XMLGregorianCalendar arg1,
        @WebParam(partName = "arg2", name = "arg2")
        java.lang.String arg2,
        @WebParam(partName = "arg3", name = "arg3")
        java.lang.String arg3,
        @WebParam(partName = "arg4", name = "arg4")
        javax.xml.datatype.XMLGregorianCalendar arg4,
        @WebParam(partName = "arg5", name = "arg5")
        java.lang.String arg5,
        @WebParam(partName = "arg6", name = "arg6")
        int arg6,
        @WebParam(partName = "arg7", name = "arg7")
        Actividad arg7
    ) throws ClaseRepetidaException_Exception;

    @WebMethod
    @Action(input = "http://publicador/Publicador/verInfoUsuarioRequest", output = "http://publicador/Publicador/verInfoUsuarioResponse", fault = {@FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://publicador/Publicador/verInfoUsuario/Fault/UsuarioNoExisteException")})
    @WebResult(name = "return", targetNamespace = "http://publicador/", partName = "return")
    public DataTypeUsuario verInfoUsuario(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    ) throws UsuarioNoExisteException_Exception;

    @WebMethod
    @Action(input = "http://publicador/Publicador/consultarActividad2Request", output = "http://publicador/Publicador/consultarActividad2Response", fault = {@FaultAction(className = ActividadNoExisteException_Exception.class, value = "http://publicador/Publicador/consultarActividad2/Fault/ActividadNoExisteException")})
    @WebResult(name = "return", targetNamespace = "http://publicador/", partName = "return")
    public Actividad consultarActividad2(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    ) throws ActividadNoExisteException_Exception;

    @WebMethod
    @Action(input = "http://publicador/Publicador/editarNombreApellidoRequest", output = "http://publicador/Publicador/editarNombreApellidoResponse", fault = {@FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://publicador/Publicador/editarNombreApellido/Fault/UsuarioNoExisteException")})
    public void editarNombreApellido(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0,
        @WebParam(partName = "arg1", name = "arg1")
        java.lang.String arg1,
        @WebParam(partName = "arg2", name = "arg2")
        java.lang.String arg2
    ) throws UsuarioNoExisteException_Exception;

    @WebMethod
    @Action(input = "http://publicador/Publicador/consultarUsuarioRequest", output = "http://publicador/Publicador/consultarUsuarioResponse", fault = {@FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://publicador/Publicador/consultarUsuario/Fault/UsuarioNoExisteException")})
    @WebResult(name = "return", targetNamespace = "http://publicador/", partName = "return")
    public DataTypeUsuario consultarUsuario(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    ) throws UsuarioNoExisteException_Exception;

    @WebMethod
    @Action(input = "http://publicador/Publicador/listarTodasRequest", output = "http://publicador/Publicador/listarTodasResponse", fault = {@FaultAction(className = ActividadNoExisteException_Exception.class, value = "http://publicador/Publicador/listarTodas/Fault/ActividadNoExisteException")})
    @WebResult(name = "return", targetNamespace = "http://publicador/", partName = "return")
    public DataListaActividades listarTodas()
 throws ActividadNoExisteException_Exception;

    @WebMethod
    @Action(input = "http://publicador/Publicador/buscarUsuarioPorEmailRequest", output = "http://publicador/Publicador/buscarUsuarioPorEmailResponse", fault = {@FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://publicador/Publicador/buscarUsuarioPorEmail/Fault/UsuarioNoExisteException")})
    @WebResult(name = "return", targetNamespace = "http://publicador/", partName = "return")
    public DataTypeUsuario buscarUsuarioPorEmail(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    ) throws UsuarioNoExisteException_Exception;

    @WebMethod
    @Action(input = "http://publicador/Publicador/crearEntrenadorRequest", output = "http://publicador/Publicador/crearEntrenadorResponse", fault = {@FaultAction(className = UsuarioRepetidoException_Exception.class, value = "http://publicador/Publicador/crearEntrenador/Fault/UsuarioRepetidoException")})
    public void crearEntrenador(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0,
        @WebParam(partName = "arg1", name = "arg1")
        java.lang.String arg1,
        @WebParam(partName = "arg2", name = "arg2")
        java.lang.String arg2,
        @WebParam(partName = "arg3", name = "arg3")
        java.lang.String arg3,
        @WebParam(partName = "arg4", name = "arg4")
        javax.xml.datatype.XMLGregorianCalendar arg4,
        @WebParam(partName = "arg5", name = "arg5")
        boolean arg5,
        @WebParam(partName = "arg6", name = "arg6")
        java.lang.String arg6,
        @WebParam(partName = "arg7", name = "arg7")
        java.lang.String arg7,
        @WebParam(partName = "arg8", name = "arg8")
        java.lang.String arg8
    ) throws UsuarioRepetidoException_Exception;

    @WebMethod
    @Action(input = "http://publicador/Publicador/listarInscripcionesPorClaseRequest", output = "http://publicador/Publicador/listarInscripcionesPorClaseResponse")
    @WebResult(name = "return", targetNamespace = "http://publicador/", partName = "return")
    public DataListaInscripciones listarInscripcionesPorClase(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    );

    @WebMethod
    @Action(input = "http://publicador/Publicador/consultarActividadRequest", output = "http://publicador/Publicador/consultarActividadResponse", fault = {@FaultAction(className = ActividadNoExisteException_Exception.class, value = "http://publicador/Publicador/consultarActividad/Fault/ActividadNoExisteException")})
    @WebResult(name = "return", targetNamespace = "http://publicador/", partName = "return")
    public DataTypeActividad consultarActividad(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    ) throws ActividadNoExisteException_Exception;

    @WebMethod
    @Action(input = "http://publicador/Publicador/agregarInscripcionAClaseRequest", output = "http://publicador/Publicador/agregarInscripcionAClaseResponse", fault = {@FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://publicador/Publicador/agregarInscripcionAClase/Fault/UsuarioNoExisteException")})
    public void agregarInscripcionAClase(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0,
        @WebParam(partName = "arg1", name = "arg1")
        java.lang.String arg1,
        @WebParam(partName = "arg2", name = "arg2")
        javax.xml.datatype.XMLGregorianCalendar arg2
    ) throws UsuarioNoExisteException_Exception;

    @WebMethod
    @Action(input = "http://publicador/Publicador/crearDeportistaRequest", output = "http://publicador/Publicador/crearDeportistaResponse", fault = {@FaultAction(className = UsuarioRepetidoException_Exception.class, value = "http://publicador/Publicador/crearDeportista/Fault/UsuarioRepetidoException")})
    public void crearDeportista(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0,
        @WebParam(partName = "arg1", name = "arg1")
        java.lang.String arg1,
        @WebParam(partName = "arg2", name = "arg2")
        java.lang.String arg2,
        @WebParam(partName = "arg3", name = "arg3")
        java.lang.String arg3,
        @WebParam(partName = "arg4", name = "arg4")
        javax.xml.datatype.XMLGregorianCalendar arg4,
        @WebParam(partName = "arg5", name = "arg5")
        boolean arg5,
        @WebParam(partName = "arg6", name = "arg6")
        java.lang.String arg6,
        @WebParam(partName = "arg7", name = "arg7")
        boolean arg7
    ) throws UsuarioRepetidoException_Exception;

    @WebMethod
    @Action(input = "http://publicador/Publicador/listarTodosRequest", output = "http://publicador/Publicador/listarTodosResponse", fault = {@FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://publicador/Publicador/listarTodos/Fault/UsuarioNoExisteException")})
    @WebResult(name = "return", targetNamespace = "http://publicador/", partName = "return")
    public DataListaUsuarios listarTodos()
 throws UsuarioNoExisteException_Exception;

    @WebMethod
    @Action(input = "http://publicador/Publicador/listarActividadesPorEntrenadorRequest", output = "http://publicador/Publicador/listarActividadesPorEntrenadorResponse", fault = {@FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://publicador/Publicador/listarActividadesPorEntrenador/Fault/UsuarioNoExisteException")})
    @WebResult(name = "return", targetNamespace = "http://publicador/", partName = "return")
    public DataListaActividades listarActividadesPorEntrenador(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    ) throws UsuarioNoExisteException_Exception;

    @WebMethod
    @Action(input = "http://publicador/Publicador/obtenerClasePorNombre2Request", output = "http://publicador/Publicador/obtenerClasePorNombre2Response", fault = {@FaultAction(className = ClaseNoExisteException_Exception.class, value = "http://publicador/Publicador/obtenerClasePorNombre2/Fault/ClaseNoExisteException")})
    @WebResult(name = "return", targetNamespace = "http://publicador/", partName = "return")
    public DataTypeClase obtenerClasePorNombre2(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    ) throws ClaseNoExisteException_Exception;

    @WebMethod
    @Action(input = "http://publicador/Publicador/listarClasesPorActividadRequest", output = "http://publicador/Publicador/listarClasesPorActividadResponse", fault = {@FaultAction(className = ClaseNoExisteException_Exception.class, value = "http://publicador/Publicador/listarClasesPorActividad/Fault/ClaseNoExisteException")})
    @WebResult(name = "return", targetNamespace = "http://publicador/", partName = "return")
    public DataListaClases listarClasesPorActividad(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0
    ) throws ClaseNoExisteException_Exception;

    @WebMethod
    @Action(input = "http://publicador/Publicador/crearActividadRequest", output = "http://publicador/Publicador/crearActividadResponse", fault = {@FaultAction(className = UsuarioRepetidoException_Exception.class, value = "http://publicador/Publicador/crearActividad/Fault/UsuarioRepetidoException"), @FaultAction(className = UsuarioNoExisteException_Exception.class, value = "http://publicador/Publicador/crearActividad/Fault/UsuarioNoExisteException"), @FaultAction(className = ActividadRepetidaException_Exception.class, value = "http://publicador/Publicador/crearActividad/Fault/ActividadRepetidaException")})
    public void crearActividad(

        @WebParam(partName = "arg0", name = "arg0")
        java.lang.String arg0,
        @WebParam(partName = "arg1", name = "arg1")
        java.lang.String arg1,
        @WebParam(partName = "arg2", name = "arg2")
        int arg2,
        @WebParam(partName = "arg3", name = "arg3")
        double arg3,
        @WebParam(partName = "arg4", name = "arg4")
        java.lang.String arg4,
        @WebParam(partName = "arg5", name = "arg5")
        javax.xml.datatype.XMLGregorianCalendar arg5,
        @WebParam(partName = "arg6", name = "arg6")
        java.lang.String arg6,
        @WebParam(partName = "arg7", name = "arg7")
        java.lang.String arg7
    ) throws UsuarioRepetidoException_Exception, UsuarioNoExisteException_Exception, ActividadRepetidaException_Exception;
}
